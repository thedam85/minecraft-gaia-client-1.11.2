# Configuration file

main {
    # Draws random stuffs on the screen! And maybe does some other things. [default: false]
    B:"Debug Mode"=false

    client {
        # Replace vanilla heart rendering. [default: true]
        B:"Custom Heart Rendering"=true

        # The time (in ticks) to show the difficulty meter whenever it pops up. [range: 0 ~ 2147483647, default: 160]
        I:"Difficulty Meter Display Time"=160

        # The colors for each additional row of hearts. The colors will loop back around to the beginning if necessary. Use hexadecimal to specify colors (like HTML color codes). [default: [bf0000], [e66000], [e69900], [e6d300], [99e600], [4ce600], [00e699], [00e6e6], [0099e6], [0000e6], [9900e6], [d580ff], [8c8c8c], [e6e6e6]]
        S:"Heart Colors" <
            bf0000
            e66000
            e69900
            e6d300
            99e600
            4ce600
            00e699
            00e6e6
            0099e6
            0000e6
            9900e6
            d580ff
            8c8c8c
            e6e6e6
         >

        # Sets position of the difficulty meter. Negative numbers anchor it to the right side of the screen. [range: -2147483648 ~ 2147483647, default: 5]
        I:"Position X"=5

        # Sets position of the difficulty meter. Negative numbers anchor it to the bottom of the screen. [range: -2147483648 ~ 2147483647, default: -30]
        I:"Position Y"=-30

        # Show the difficulty meter. Usually, it is displayed for a few seconds occasionally. [default: true]
        B:"Render Difficulty Meter"=true

        # Render the difficulty meter at all times. [default: false]
        B:"Render Difficulty Meter Always"=false
    }

    player {

        health {
            # Allow Scaling Health to modify the player's health. Set to false if you have another mod that modifies player health, and you would like that mod to handle health modifications instead. With this option set to false, heart containers will not work, nor will the '/scalinghealth health' command. [default: true]
            B:"Allow Modified Health"=true

            # The amount of health (in half hearts) the player will lose each time they die. [range: 0 ~ 2147483647, default: 0]
            I:"Health Lost on Death"=0

            # The maximum amount of health (in half hearts) the player can reach. Zero means unlimited. [range: 0 ~ 2147483647, default: 0]
            I:"Max Health"=0

            # The amount of health (in half hearts) the player starts with. [range: 2 ~ 2147483647, default: 20]
            I:"Starting Health"=10
        }

        regen {
            # The number of ticks between each bonus regen tick (a half heart being healed). [range: 0 ~ 2147483647, default: 100]
            I:Delay=50000

            # The number of ticks after being hurt before bonus regen activates. [range: 0 ~ 2147483647, default: 400]
            I:"Delay (Initial)"=400

            # Bonus health regen will be enabled. Vanilla regen is not changed in any way, this just adds extra healing! [default: true]
            B:"Enable Bonus Regen"=true

            # The maximum food level at which bonus regen will be active. [range: 0 ~ 20, default: 20]
            I:"Food Max"=20

            # The minimum food level at which bonus regen will be active. [range: 0 ~ 20, default: 10]
            I:"Food Min"=10
        }

    }

    mob {
        # A multiplier for extra attack strength all mobs will receive. Set to 0 to disable extra attack strength. [range: 0.0 ~ 3.4028235E38, default: 0.1]
        S:"Damage Modifier"=0.1

        health {
            # Allow hostile mobs (monsters) to spawn with extra health based on difficulty. [default: true]
            B:"Allow Hostile Extra Health"=true

            # Allow peaceful mobs (such as animals) to spawn with extra health based on difficulty. [default: true]
            B:"Allow Peaceful Extra Health"=true

            # The minimum extra health a mob will have per point of difficulty. For example, at difficulty 30, a mob that normally has 20 health would have at least 50 health. [range: 0.0 ~ 3.4028235E38, default: 0.5]
            S:"Base Health Modifier"=0.5

            # The minimum extra health a peaceful will have per point of difficulty. Same as "Base Health Modifier", but for peaceful mobs! [range: 0.0 ~ 3.4028235E38, default: 0.25]
            S:"Base Health Modifier Peaceful"=0.25

            # Mobs listed here will never receive extra health, and will not become blights. There is also a separate blacklist for blights, if you still want the mob in question to have extra health. [default: ]
            S:Blacklist <
             >

            # Describes how extra mob health is applied. This will not change the health of mobs that already exist!
            #   ADD - Adds a value based on difficulty to the mob's health, ignoring the mob's default health.
            #   MULTI - Multiplies the mob's health instead of adding a flat value. For example, endermen
            #     will always have around twice the health of zombies with this option.
            #   MULTI_HALF - Multiplies the mob's health, but the value is reduced for higher-health mobs.
            #   MULTI_QUARTER - Same as MULTI_HALF, but the scaling factor is even less. [default: MULTI_HALF]
            S:"Scaling Mode"=MULTI
        }

        blights {
            # The amplifier level on the speed potion effect applied to blights. [range: 0 ~ 99, default: 8]
            I:"Amplifier Speed"=8

            # The amplifier level on the strength potion effect applied to blights. [range: 0 ~ 99, default: 2]
            I:"Amplifier Strength"=2

            # Mobs listed here will never become blights, but can still receive extra health. There is also a blacklist for extra health. [default: [WitherBoss], [Villager]]
            S:Blacklist <
                WitherBoss
                Villager
             >

            # Determines the chance of a mob spawning as a blight. Formula is blightChanceMulti * currentDifficulty / maxDifficulty [range: 0.0 ~ 3.4028235E38, default: 0.0625]
            S:"Blight Chance Multiplier"=0.0625

            # Should blights have the fire resistance potion effect? [default: true]
            B:"Fire Resist"=true

            # Blight's fire will be set to ride the blight. This will make the fire follow the blight more smoothly and prevent it from bobbing. Disable if you are having issues. [default: false]
            B:"Fire Rides Blights"=false

            # Should blights have the invisibility potion effect? [default: false]
            B:Invisibility=false

            # Blight creepers will also be supercharged (like when they are struck by lightning). [default: true]
            B:"Supercharge Creepers"=true

            # The multiplier applied to the amount of XP dropped when a blight is killed. [range: 0.0 ~ 1000.0, default: 10.0]
            S:"XP Multiplier"=10.0
        }

    }

    items {
        # The chance of a hostile mob dropping a heart canister when killed. [range: 0.0 ~ 1.0, default: 0.01]
        S:"Heart Drop Chance"=0.01

        # The chance of a passive mob (animals) dropping a heart canister when killed. [range: 0.0 ~ 1.0, default: 0.001]
        S:"Heart Drop Chance (Passive)"=0.001

        # The maximum number of heart canisters that a blight will drop when killed. [range: 0 ~ 64, default: 2]
        I:"Hearts Dropped by Blight Max"=2

        # The minimum number of heart canisters that a blight will drop when killed. [range: 0 ~ 64, default: 0]
        I:"Hearts Dropped by Blight Min"=0

        # The maximum number of heart canisters that a boss will drop when killed. [range: 0 ~ 64, default: 6]
        I:"Hearts Dropped by Boss Max"=6

        # The minimum number of heart canisters that a boss will drop when killed. [range: 0 ~ 64, default: 3]
        I:"Hearts Dropped by Boss Min"=3
    }

    difficulty {
        # Defines how the area difficulty is determined when spawning a mob.
        #   AVERAGE - The average difficulty level of all nearby players.
        #   WEIGHTED_AVERAGE - Similar to average, but closer players have a greater impact on difficulty.
        #   MIN_LEVEL - The lowest difficulty level of all nearby players.
        #   MAX_LEVEL - The highest difficulty level of all nearby players.
        #   DISTANCE_FROM_SPAWN - Based on the mob's distance from spawn.
        #   DISTANCE_FROM_ORIGIN - Based on the mob's distance from the origin.
        #   DISTANCE_AND_TIME - Mix of DISTANCE_FROM_SPAWN and WEIGHTED_AVERAGE. [default: WEIGHTED_AVERAGE]
        S:"Area Mode"=WEIGHTED_AVERAGE

        # The amount of difficulty added per unit distance from the origin/spanw, assuming "Area Mode" is set to a distance-based option. [range: 0.0 ~ 3.4028235E38, default: 0.0025]
        S:"Difficulty Per Block"=0.0025

        # The difficulty gained for each hostile mob killed. Set to 0 to disable. [range: 0.0 ~ 1000.0, default: 0.0]
        S:"Difficulty Per Kill"=0.1

        # Adds this much extra difficulty per additional player in the area. So, area difficulty will be multiplied by: 1 + group_bonus * (players_in_area - 1) [range: 0.0 ~ 3.4028235E38, default: 0.05]
        S:"Group Area Bonus"=0.05

        # Difficulty added per second is multiplied by this if the player is not moving. [range: 0.0 ~ 3.4028235E38, default: 0.7]
        S:"Idle Multiplier"=0.7

        # The amount of difficulty added each second. In Difficult Life, the option was named per tick, but was actually applied each second. [range: 0.0 ~ 3.4028235E38, default: 0.0011574074]
        S:"Increase Per Second"=0.0011574074

        # The difficulty a player loses on death. Entering a negative number will cause the player to GAIN difficulty instead! [range: -1000 ~ 1000, default: 0]
        I:"Lost On Death"=0

        # The maximum difficult level that can be reached. [range: 0.0 ~ 3.4028235E38, default: 250.0]
        S:"Max Value"=2500.0

        # The distance from a newly spawned mob to search for players to determine its difficulty level. Set to 0 for unlimited range. [range: 0 ~ 32767, default: 160]
        I:"Search Radius"=160

        # The starting difficulty level for new worlds. [range: 0.0 ~ 3.4028235E38, default: 0.0]
        S:"Starting Value"=0.0
    }

    network {
        # The number of ticks between update packets. Smaller numbers mean more packets (and more bandwidth and processing power used), but also less client-server desync. [range: 1 ~ 1200, default: 20]
        I:"Packet Delay"=20
    }

    world {

        heart_crystal_ore {
            # The maximum number of extra veins created by distance from spawn. [range: 0.0 ~ 1000.0, default: 3.0]
            S:"Extra Vein Cap"=3.0

            # The number of extra possible veins per chunk away from spawn. The default value will reach the cap at 50,000 blocks from spawn. [range: 0.0 ~ 1.0, default: 9.6E-4]
            S:"Extra Vein Rate"=9.6E-4

            # The highest y-level the ore can be found at. Must be greater than Min Height [range: 0 ~ 255, default: 35]
            I:"Max Height"=35

            # The lowest y-level the ore can be found at. Must be less than Max Height [range: 0 ~ 255, default: 10]
            I:"Min Height"=10

            # The size of each vein. [range: 0 ~ 10000, default: 6]
            I:"Vein Size"=6

            # The number of veins per chunk. The fractional part is a probability of an extra vein in each chunk. [range: 0.0 ~ 10000.0, default: 0.42857143]
            S:"Veins Per Chunk"=0.42857143
        }

    }

}


